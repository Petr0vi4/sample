apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      initContainers:
        - name: check-db-ready
          image: postgres:11-alpine
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: billing-config
                  key: DATABASE_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: billing-config
                  key: DATABASE_PORT
          command:
            - sh
            - "-c"
            - |
              until pg_isready -h $POSTGRES_HOST  -p  $POSTGRES_PORT;
              do echo waiting for database; sleep 2; done;
      containers:
        - name: post-install-job
          env:
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: billing-config
                  key: DATABASE_HOST
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: billing-config
                  key: DATABASE_PORT
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: billing-config
                  key: DATABASE_NAME
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: postgresql-user
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: postgresql-password
          image: {{ .Values.imagePhpFpm }}
          imagePullPolicy: {{ .Values.imageConfig.pullPolicy }}
          command:
            - sh
            - "-c"
            - |
              bin/console do:database:create --if-not-exists && bin/console do:mi:mi --no-interaction
  backoffLimit: 0
